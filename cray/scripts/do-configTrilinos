#!/bin/bash -x

# Cray installed libraries: mpich, netcdf, hdf5
mpi_base_dir=$MPICH_DIR
netcdf_install_dir=$CRAY_NETCDF_DIR/GNU/49
hdf_install_dir=$CRAY_HDF5_DIR/GNU/49

export CMAKE_C_COMPILER=`which cc`
export CMAKE_CXX_COMPILER=`which CC`
export CMAKE_FORTRAN_COMPILER=`which ftn`

nalu_build_dir=$NALU_BUILD_DIR

# Note: Don't forget to set your LD_LIBRARY_PATH to $mpi_base_dir/lib
#       You may also need to add to LD_LIBRARY_PATH the lib directory for the compiler
#       used to create the mpi executables.

# TPLS needed by trilinos, possibly provided by HomeBrew on a Mac
#boost_dir=/usr/local/Cellar/boost/1.56.0/include/boost/
#superlu_inc_dir=/usr/local/Cellar/superlu/4.3/include/superlu
#superlu_lib_dir=/usr/local/Cellar/superlu/4.3/lib
boost_dir=$nalu_build_dir/install
superlu_inc_dir=$nalu_build_dir/install/SuperLU_4.3/include
superlu_lib_dir=$nalu_build_dir/install/SuperLU_4.3/lib

# Additional needed TPLS
z_install_dir=$nalu_build_dir/install

# Where trilinos will be installed
trilinos_install_dir=$nalu_build_dir/install/trilinos

echo "nalu_build_dir = \"$nalu_build_dir\""

EXTRA_ARGS=$@

# Cleanup old cache before we configure
# Note:  This does not remove files produced by make.  Use "make clean" for this.
find . -name "CMakeFiles" -exec rm -rf {} \;
rm -f CMakeCache.txt


cmake \
-D CMAKE_C_COMPILER=`which cc` \
-D CMAKE_CXX_COMPILER=`which CC` \
-D CMAKE_FORTRAN_COMPILER=`which ftn` \
-D CMAKE_C_FLAGS:STRING="-ip -fp-model precise -fp-model source -restrict" \
-D CMAKE_CXX_FLAGS:STRING="-ip -fp-model precise -fp-model source -restrict -DMPICH_SKIP_MPICXX" \
-D CMAKE_Fortran_FLAGS:STRING="-ip -fp-model source" \
-D CMAKE_BUILD_TYPE:STRING=RELEASE \
-D CMAKE_C_FLAGS_RELEASE_OVERRIDE:STRING=-O2 \
-D CMAKE_CXX_FLAGS_RELEASE_OVERRIDE:STRING=-O2 \
-D CMAKE_Fortran_FLAGS_RELEASE_OVERRIDE:STRING=-O2 \
-D BUILD_SHARED_LIBS:BOOL=OFF \
-D MPI_USE_COMPILER_WRAPPERS:BOOL=ON \
-D MPI_EXEC=aprun \
-D MPI_EXEC_NUMPROCS_FLAG=-n \
-DBLAS_LIBRARY_NAMES="" \
-DLAPACK_LIBRARY_NAMES="" \
-DCMAKE_INSTALL_PREFIX=$trilinos_install_dir \
-DTrilinos_ENABLE_CXX11=ON \
-DTrilinos_ENABLE_EXPLICIT_INSTANTIATION:BOOL=ON \
-DTpetra_INST_DOUBLE:BOOL=ON \
-DTpetra_INST_INT_LONG:BOOL=ON \
-DTpetra_INST_COMPLEX_DOUBLE=OFF \
-DTrilinos_ENABLE_TESTS:BOOL=OFF \
-DTrilinos_ENABLE_ALL_OPTIONAL_PACKAGES=OFF \
-DTrilinos_ALLOW_NO_PACKAGES:BOOL=OFF \
-DTPL_ENABLE_MPI=ON \
  -DMPI_BASE_DIR:PATH=$mpi_base_dir \
-DTPL_ENABLE_SuperLU=ON \
  -DSuperLU_INCLUDE_DIRS:PATH=$superlu_inc_dir \
  -DSuperLU_LIBRARY_DIRS:PATH=$superlu_lib_dir \
-DTrilinos_ENABLE_Epetra:BOOL=ON \
-DTrilinos_ENABLE_Tpetra:BOOL=ON \
-DTrilinos_ENABLE_ML:BOOL=ON \
-DTrilinos_ENABLE_MueLu:BOOL=ON \
-DTrilinos_ENABLE_EpetraExt:BOOL=ON \
-DTrilinos_ENABLE_AztecOO:BOOL=ON \
-DTrilinos_ENABLE_Belos:BOOL=ON \
-DTrilinos_ENABLE_Ifpack2:BOOL=ON \
-DTrilinos_ENABLE_Amesos2:BOOL=ON \
-DTrilinos_ENABLE_Zoltan2:BOOL=ON \
-DTrilinos_ENABLE_Ifpack:BOOL=ON \
-DTrilinos_ENABLE_Amesos:BOOL=ON \
-DTrilinos_ENABLE_Zoltan:BOOL=ON \
-DTrilinos_ENABLE_STKMesh:BOOL=ON \
-DTrilinos_ENABLE_STKIO:BOOL=ON \
-DTrilinos_ENABLE_STKTransfer:BOOL=ON \
-DTrilinos_ENABLE_STKSearch:BOOL=ON \
-DTrilinos_ENABLE_STKUtil:BOOL=ON \
-DTrilinos_ENABLE_STKTopology:BOOL=ON \
-DTrilinos_ENABLE_Gtest:BOOL=ON \
-DTrilinos_ENABLE_STKClassic:BOOL=OFF \
-DTrilinos_ENABLE_SEACASExodus:BOOL=ON \
-DTrilinos_ENABLE_SEACASEpu:BOOL=ON \
-DTrilinos_ENABLE_SEACASExodiff:BOOL=ON \
-DTrilinos_ENABLE_SEACASNemspread:BOOL=ON \
-DTrilinos_ENABLE_SEACASNemslice:BOOL=ON \
  -DTPL_ENABLE_Netcdf:STRING=ON \
  -DTPL_Netcdf_LIBRARIES:PATH="${netcdf_install_dir}/lib/libnetcdf.a;${hdf_install_dir}/lib/libhdf5_hl.a;${hdf_install_dir}/lib/libhdf5.a;${z_install_dir}/lib/libz.a" \
  -DNetcdf_INCLUDE_DIRS:PATH="${netcdf_install_dir}/include" \
  -DNetcdf_LIBRARY_DIRS:PATH="${netcdf_install_dir}/lib" \
  -DTPL_ENABLE_HDF5:STRING=ON \
  -DHDF5_INCLUDE_DIRS:PATH="${hdf_install_dir}/include" \
  -DTPL_HDF5_LIBRARIES:PATH="${hdf_install_dir}/lib/libhdf5_hl.a;${hdf_install_dir}/lib/libhdf5.a;${z_install_dir}/lib/libz.a" \
  -DTPL_ENABLE_Zlib:STRING=ON \
  -DZlib_INCLUDE_DIRS:PATH="${z_install_dir}/include" \
  -DTPL_Zlib_LIBRARIES:PATH="${z_install_dir}/lib/libz.a" \
-DBoostLib_INCLUDE_DIRS:PATH="$boost_dir/include" \
-DBoostLib_LIBRARY_DIRS:PATH="$boost_dir/lib" \
-DTrilinos_ASSERT_MISSING_PACKAGES=OFF \
$EXTRA_ARGS \
../
